#include <LiquidCrystal.h>
#include <Servo.h>
#include <SPI.h>
#include <MFRC522.h>

// === Pin Configuration ===
#define RST_PIN 9
#define SS_PIN 10
const int buzzerPin = 3;
const int sensorPin = A0;
const int servoPin = 6;

// LCD: rs, en, d4, d5, d6, d7
LiquidCrystal lcd(A3, A1, 4, 5, A2, 7);
Servo lockServo;
MFRC522 rfid(SS_PIN, RST_PIN);

// === Your authorized RFID tag UID ===
byte authorizedUID[4] = { 0xB1, 0x25, 0xF9, 0x04 }; // Your actual tag UID

// === State Flags ===
bool testReady = false;
bool boxLocked = false;

void setup() {
  Serial.begin(9600);
  SPI.begin();
  rfid.PCD_Init();

  pinMode(buzzerPin, OUTPUT);
  lockServo.attach(servoPin);
  lockServo.write(90); // Start UNLOCKED

  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  lcd.print("Scan RFID Tag");
  lcd.setCursor(0, 1);
  lcd.print("to Lock Box");

  tone(buzzerPin, 1000); delay(200); noTone(buzzerPin);
  delay(200);
  tone(buzzerPin, 1200); delay(200); noTone(buzzerPin);
}

void loop() {
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) return;

  if (isAuthorizedTag()) {
    if (!boxLocked) {
      lockBox();
      delay(1000);
      runBreathalyzer();
    } else {
      // If box is locked, allow retry of test
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Re-test Starting");
      delay(1500);
      runBreathalyzer();
    }
  } else {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Access Denied");
    lcd.setCursor(0, 1);
    lcd.print("Invalid RFID");
    tone(buzzerPin, 500); delay(500); noTone(buzzerPin);
    delay(2000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Scan RFID Tag");
    lcd.setCursor(0, 1);
    lcd.print("to Lock Box");
  }

  rfid.PICC_HaltA(); // Stop reading
}

bool isAuthorizedTag() {
  for (byte i = 0; i < 4; i++) {
    if (rfid.uid.uidByte[i] != authorizedUID[i]) return false;
  }
  return true;
}

void lockBox() {
  lockServo.write(0);
  boxLocked = true;
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Box is LOCKED");
  lcd.setCursor(0, 1);
  lcd.print("Start Test...");
  Serial.println("Box locked. Test ready.");
  tone(buzzerPin, 800); delay(300); noTone(buzzerPin);
  delay(2000);
}

void unlockBox() {
  lockServo.write(90);
  boxLocked = false;
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("You Passed!");
  lcd.setCursor(0, 1);
  lcd.print("Keys: UNLOCKED");
  Serial.println("Box unlocked.");
  tone(buzzerPin, 1200); delay(300); noTone(buzzerPin);
  delay(300);
  tone(buzzerPin, 1200); delay(300); noTone(buzzerPin);
  delay(3000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Scan RFID Tag");
  lcd.setCursor(0, 1);
  lcd.print("to Lock Box");
}

void runBreathalyzer() {
  // === Warm-Up ===
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Breathalyzer ON");
  lcd.setCursor(0, 1);
  lcd.print("Warming up...");
  tone(buzzerPin, 1000); delay(500); noTone(buzzerPin);
  delay(2000);

  // === Blowing ===
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Blow into sensor");
  lcd.setCursor(0, 1);
  lcd.print("Keep blowing...");
  tone(buzzerPin, 1500); delay(5000); noTone(buzzerPin);

  // === Check Result ===
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Checking result");
  lcd.setCursor(0, 1);
  lcd.print("Please wait...");
  delay(2000);

  int sensorValue = analogRead(sensorPin);
  float bac = 0.000;
  if (sensorValue >= 350) {
    bac = map(sensorValue, 350, 1023, 0, 150) / 1000.0;
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("BAC: ");
  lcd.print(bac, 3);
  delay(1500);

  if (bac >= 0.08) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("You're DRUNK!");
    lcd.setCursor(0, 1);
    lcd.print("Keys: LOCKED");
    tone(buzzerPin, 800); delay(1000); noTone(buzzerPin);
    Serial.println("Failed test. Box remains locked.");
  } else {
    unlockBox();
  }
}
