#include <LiquidCrystal.h>

// Define Buzzer Pin
const int buzzerPin = 3;  // Your passive buzzer on pin 3

// LCD Pin Configuration
const int rsPin = 12;
const int enablePin = 11;
const int d4Pin = 4;
const int d5Pin = 5;
const int d6Pin = 6;
const int d7Pin = 7;

// Initialize LCD
LiquidCrystal lcd(rsPin, enablePin, d4Pin, d5Pin, d6Pin, d7Pin);

void setup() {
    Serial.begin(9600);
    delay(100);

    // Initialize LCD
    lcd.begin(16, 2);
    lcd.setCursor(0, 0);
    lcd.print("Breathalyzer");
    lcd.setCursor(0, 1);
    lcd.print("Subsystem Ready");

    pinMode(buzzerPin, OUTPUT);

    // Test beep sequence
    tone(buzzerPin, 1000);
    delay(300);
    noTone(buzzerPin);
    delay(300);
    tone(buzzerPin, 1200);
    delay(300);
    noTone(buzzerPin);
}

void loop() {
    // === WARMING UP ===
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Breathalyzer ON");
    lcd.setCursor(0, 1);
    lcd.print("Warming up...");
    Serial.println("LCD: Warming up...");

    tone(buzzerPin, 1000);
    delay(500);
    noTone(buzzerPin);
    delay(2000);

    // === BLOWING ===
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Blow into sensor");
    lcd.setCursor(0, 1);
    lcd.print("Keep blowing...");
    Serial.println("LCD: Blow prompt");

    tone(buzzerPin, 1500);         // Buzzer ON during blowing
    delay(5000);                   // Simulate 5 seconds of blowing
    noTone(buzzerPin);            // Buzzer OFF after blowing

    delay(500);

    // === CHECKING RESULT ===
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Checking result");
    lcd.setCursor(0, 1);
    lcd.print("Please wait...");
    Serial.println("LCD: Checking result");

    delay(2000);

    // === RESULT (BAC: blank) ===
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("BAC:           ");  // Just "BAC:" with no number
    lcd.setCursor(0, 1);
    lcd.print("Sober. Drive Safe");
    Serial.println("Result: Sober");

    // Beep pattern for "sober" result
    tone(buzzerPin, 1200);
    delay(300);
    noTone(buzzerPin);
    delay(300);
    tone(buzzerPin, 1200);
    delay(300);
    noTone(buzzerPin);

    delay(5000); // Wait before repeating
}
